!function(){function e(){function e(e){var n=e;n.config.warning&&(n.config.warning=!1),n.config&&"autocomplete"===n.config.type?(n.config.autocompleteConfig.searchText=n.model[n.config.code],delete n.config.autocompleteConfig.selectedItem):n.config&&"date"===n.config.type?(n.config.dateConfig||(n.config.dateConfig={}),n.config.dateConfig.minDate=n.config.dateConfig.minDate?moment(n.config.dateConfig.minDate).toDate():void 0,n.config.dateConfig.maxDate=n.config.dateConfig.maxDate?moment(n.config.dateConfig.maxDate).toDate():void 0,"number"==typeof n.model[n.config.code]&&n.model[n.config.code]&&(n.model[n.config.code]=moment(n.model[n.config.code]).toDate())):n.config&&"checkbox"===n.config.type&&n.model[n.config.code]&&(n.model[n.config.code]=!0),null!==n.model[n.config.code]&&void 0!==n.model[n.config.code]&&n.config.changeFn&&"function"==typeof n.config.changeFn&&n.config.changeFn(n.model[n.config.code],n.model)}return e.$inject=["$scope"],{restrict:"EA",templateUrl:"src/tpl/form-component.tpl.html",scope:{config:"=",model:"=",editable:"="},controller:e}}angular.module("mdformComponent",["formComponent.template","ngMaterial"]).directive("mdFormComponent",e),e.$inject=[]}(),angular.module("formComponent.template",[]).run(["$templateCache",function(e){"use strict";e.put("src/tpl/form-component.tpl.html",'<div class=md-form-component layout=row layout-align="start center" ng-if=!config.hide><div flex=40 layout=column layout-align="start stretch"><label class="md-form-label label-{{config.type}}" for={{config.code}} ng-bind=config.name></label></div><div flex=60 layout=column layout-align="center stretch"><md-input-container class=md-block flex layout=column layout-align="center stretch" ng-if="config.type !== \'date\'" md-no-float><input ng-if="config.type === \'text\'" ng-model=model[config.code] name={{config.code}} ng-class="{ \'md-warning\': config.warning }" aria-label={{config.name}} id={{config.code}} placeholder={{config.placeholder}} md-no-asterisk ng-disabled="config.disabled || !editable" ng-readonly="config.readonly || false" ng-required="config.required || false" ng-minlength="config.minLength || undefined" ng-maxlength="config.maxLength || undefined" ng-pattern="config.pattern || undefined" ng-change="config.changeFn(model[config.code], model)" ng-blur="config.blurFn(model[config.code], model)"><textarea ng-if="config.type === \'textarea\'" ng-model=model[config.code] name={{config.code}} ng-class="{ \'md-warning\': config.warning }" aria-label={{config.name}} id={{config.code}} type=textarea placeholder={{config.placeholder}} md-no-asterisk ng-disabled="config.disabled || !editable" ng-readonly="config.readonly || false" ng-required="config.required || false" ng-minlength="config.minLength || undefined" ng-maxlength="config.maxLength || undefined" ng-pattern="config.pattern || undefined" rows="{{config.textareaConfig.rows || 1}}" ng-change="config.changeFn(model[config.code], model)" ng-blur="config.blurFn(model[config.code], model)">\n\t\t\t\t\t</textarea><input ng-if="config.type === \'email\'" ng-model=model[config.code] name={{config.code}} ng-class="{ \'md-warning\': config.warning }" aria-label={{config.name}} id={{config.code}} type=email placeholder={{config.placeholder}} md-no-asterisk ng-disabled="config.disabled || !editable" ng-readonly="config.readonly || false" ng-required="config.required || false" ng-minlength=config.minLength ng-maxlength=config.maxLength ng-pattern="config.pattern || undefined" ng-change="config.changeFn(model[config.code], model)" ng-blur="config.blurFn(model[config.code], model)"> <input ng-if="config.type === \'number\'" ng-model=model[config.code] name={{config.code}} ng-class="{ \'md-warning\': config.warning }" aria-label={{config.name}} id={{config.code}} type=number placeholder={{config.placeholder}} md-no-asterisk ng-disabled="config.disabled || !editable" ng-readonly="config.readonly || false" ng-required="config.required || false" ng-min=config.min ng-max=config.max ng-step="config.step || undefined" ng-minlength=config.minLength ng-maxlength=config.maxLength ng-pattern="config.pattern || undefined" ng-change="config.changeFn(model[config.code], model)" ng-blur="config.blurFn(model[config.code], model)"><md-select ng-if="config.type === \'select\'" name={{config.code}} ng-class="{ \'md-warning\': config.warning }" id={{config.code}} md-no-asterisk ng-model=model[config.code] aria-label={{config.name}} ng-disabled="config.disabled || !editable" ng-required="config.required || false" ng-change="config.changeFn(model[config.code], model)" ng-blur="config.blurFn(model[config.code], model)"><md-option ng-if="config.selectConfig.valueKey && config.selectConfig.textKey" ng-repeat="option in config.selectConfig.options" ng-value=option[config.selectConfig.valueKey]>{{option[config.selectConfig.textKey]}}</md-option><md-option ng-if="!config.selectConfig.valueKey || !config.selectConfig.textKey" ng-repeat="option in config.selectConfig.options" ng-value=option>{{option}}</md-option></md-select><md-checkbox class=md-primary ng-if="config.type === \'checkbox\'" ng-disabled="config.disabled || !editable" name={{config.code}} ng-class="{ \'md-warning\': config.warning }" id={{config.code}} md-no-asterisk ng-model=model[config.code] aria-label={{config.name}} ng-required="config.required || false" ng-change=config.changeFn></md-checkbox><md-autocomplete ng-if="config.type === \'autocomplete\'" ng-required="config.required || false" ng-disabled="config.disabled || !editable" md-input-name={{config.code}} ng-class="{ \'md-warning\': config.warning }" md-no-asterisk md-input-id={{config.code}} md-no-cache=config.autocompleteConfig.noCache md-selected-item=config.autocompleteConfig.selectedItem md-search-text-change=config.autocompleteConfig.searchTextChange(config.autocompleteConfig.searchText) md-search-text=config.autocompleteConfig.searchText md-selected-item-change="config.autocompleteConfig.selectedItemChange(item, model)" md-items="item in config.autocompleteConfig.querySearch(config.autocompleteConfig.searchText)" md-item-text=item[config.autocompleteConfig.displayKey] md-min-length="config.autocompleteConfig.minLength || 0" placeholder={{config.placeholder}}><md-item-template><span ng-if=config.autocompleteConfig.displayKey md-highlight-text=config.autocompleteConfig.searchText md-highlight-flags=^i>{{ item[config.autocompleteConfig.displayKey] }}</span> <span ng-if=!config.autocompleteConfig.displayKey md-highlight-text=config.autocompleteConfig.searchText md-highlight-flags=^i>{{ item }}</span></md-item-template><md-not-found>Nothing results matching "{{config.autocompleteConfig.searchText}}" were found.</md-not-found></md-autocomplete></md-input-container><md-datepicker flex layout=row layout-align=stretch-center ng-if="config.type === \'date\'" name={{config.code}} ng-class="{ \'md-warning\': config.warning }" md-no-asterisk id={{config.code}} ng-model=model[config.code] md-placeholder="{{config.placeholder || \'Enter date\'}}" md-min-date="(config.dateConfig && config.dateConfig.minDate) ? config.dateConfig.minDate : false" md-max-date="(config.dateConfig && config.dateConfig.maxDate) ? config.dateConfig.maxDate : false" ng-required="config.required || false" ng-disabled="config.disabled || !editable" ng-change="config.changeFn(model[config.code], model)"></md-datepicker></div></div>')}]);